services:
  web:
    image: rentpe-web:latest
    build: ./website
    depends_on:
      - auth
      - db
    ports:
      - 8080:80
    networks:
      - frontend
  auth:
    image: rentpe-auth:latest
    build: ./auth
    depends_on:
      - db
      - redis
    ports:
      - 3000:3001
    networks:
      - backend
    env_file:
      - ./auth/.env.local
  db:
    image: postgres:13-alpine
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
  redis:
    image: redis:7.4.3-alpine
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
  sonar-qube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - web
      - auth
    ports:
      - 9000:9000
    deploy:
      resources:
        limits:
          memory: 2g
volumes:
  db-data:
networks:
  frontend:
  backend: